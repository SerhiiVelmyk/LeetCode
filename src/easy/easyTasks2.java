package easy;

import java.util.*;

public class easyTasks2 {

    public static void main(String[] args) {
        int[] array1 = {1, 12, -5, -6, 50, 3};
        System.out.println(findMaxAverage(array1, 4));
        System.out.println(findMaxAverage(array1, 5));

        int[] array2 = {1, 1, 2, 2, 4, 5, 5, 5};
        System.out.println(removeDuplicates(array2));
        System.out.println(countSegments("Hello, my name is John"));
        System.out.println(countSegments("   "));
        System.out.println(addBinary("11", "11"));
        System.out.println(addBinary("111", "111"));
        System.out.println(isIsomorphic("abc", "xyz"));
        System.out.println(isIsomorphic("aa", "ab"));
        System.out.println(findAnagrams("cbaebabacd", "abc"));
        System.out.println(findAnagrams("", ""));
        System.out.println(findAnagrams("", ""));
        System.out.println(wordPattern("abba", "dog cat cat dog"));
        System.out.println(wordPattern("aaaa", "dog dog cat dog"));

        int[] array3 = {1, 2, 3, 0, 0, 0};
        int[] array4 = {2, 5, 6};
        merge(array3, 3, array4, 3);
        merge(array3, 1, array4, 1);

        System.out.println(validPalindrome("aba"));
        System.out.println(validPalindrome("qzvyaspozvrapgbabfnxuulwdkkhdcyutvzmzytoedhvaawpqbjwvtsnicwixpxgxnbajmgygtpneospsdcmuuvbqgcexddbvigodiiltqqdwxokxsxojprpjkylvvtjwfnqgpdzjzpmjgwaepspdshhvdpnwfgpftixtwinlhiyvnhfgveiiecktvssqctmkopuxyeotuntysxwuqwzktapkwtlcoootjjzuuektsiesnrqmftiegicwcqjxizlripykxlwnaejwewtxictoisnxylogwunvwewomwuviyzdcrngdijofpqvjeoytwrgkuouozltdbyqmguofqmhmuvqkwqtnhyyyozeqfplvyzzcbkuxypdrrtqggchvfwkemyfijfwsmhcesnebeqtkxjvbmvfxhqklmmbdyssvqvkzrnplkkracqnskjihxvhujmzrgbburydmmwkzfoyljbngczqijwwqepztfvgwlupduiocqcarffcjqltjfybjlvercmstwxqiszpsjkphtqytmbysiaqtktrwrelzknwjdsjftwizowtkkmyhagxpvgqlipechwssttmsjfxunhjnvixuswxpvwtgarjhsiwgnqdoqqzrhlfqotbvpabkkdjetxeqpsxieqbjsctzzryyaihwduvhxrmynhejhoeforfsjmwprkiolmplinuxqvjlamvpgahofvtzwwlompeaongdagijvdgrsokkwxouucqdqcgthebbwlnbufdupijkinjugikhipnmrtbsiwzkjidytaxicbklogeytqichgahtglcaklofvltparnpraaqtfyuvhtozuvnnxchjydfzubuabdxreybhthlevynxhretfkjdrwagcegtpegvykadtzdtjdzwgxispfgczgpqhmmcvjenvgoustqnnywgpgkncxzjvwjiuuoyowofopjeavokicqwrbqlxhbsmvnugcbhrdclhgicghrztbuebmrmbzohjdlmhejemthlkzjbfvonanuqymtglnmjyqiytkkikwhmwonfiiayioyhhqahbbvbhiopehqsvbmapmihgrydhaqybdyjhulxwjkuezufpzqftebqvknycaasrhyyffpgsmyqegmtgwtnydegroulgafidyycfknoljaaotvmhpsmuhzpqyfiiyoupwknmfdnsazqjyopekuordaussymvkaoikabonsnhvkqutppyjgyptcclsuujzgfiwgxbfcjwdasoylktniwyqbmiqwjswvbhqomzezzsmiqagqtaanbeycvspvmhqulvomquhnqocbgdbszgqumwisfkgdenczncsrammqsjbmccumtybpgttrychteccjanmbdjnlbtteeaoxiihyaudnqgwcpbmbfobjovkunqfkesqkprsuxzmovnsfnwmgxlhatpzpprhlfbnvridzmgbmsgjtlwqafaxobyjytcemutgpcedgitchdhlxmpbtnetpdvrhapquyvvgaohyedsvsnpjrdsotddjtmenwuzakbhspymtuasdzyharoomsmbhxixwpkdbgpsnovtxthxroamvscuttiquqkhbrdzjrugooasafovnkxgxwvpwaqfnlulsxhoiqyjqchvrokfikrbqoyigfbwbasxorgovzggrjkldxhxpffqabhnyaskgxgawihzhdjucrcmvjyiiemgqusswuarxldingxlwzscddljschkdfplshsruawjivgtdafedytecakexuszkkmlresckipyttcaskkomvnksdjjqslxlfrkowzusbojmzwhirwxvtkbusalfgmtvfmwzviusyhxrlaqryufibnabewbulrnyriirjoykhtlqyjyknwmppkhccvmhncxmqajhqnzcwvowabanrrxkbegarnpnzmwfgaqtjbucnvbudjkiwxqjxjpzrnbztowdphwgrsewhszrevglqzipcvymxgrlwwopeoswrksiilbidznnkvqpeabwgqcrowxvbqvvzplipyluteotfvrilxkyahkjhtqxgmkgjpyijlxtytzozhnfvgxksknopatternjzyxkocgadodxhhgljnrtstrzfxavbnazrdfxpmovcbxjqbonkikolyiyyecibnbmmmuxloeebsbrurxqhyfaxcswtdqtqzbrxgfpvhqiwptpikuauboorittwfpqmsuvhlxitwnzuuqiabhuitupvyczuoqwhspnjbnjerlxpmhhktqfqwjylupdtqyxlrgtqnacwytluuuptuhfszgykmfbhboorzsatzzjhekdpzdesvyljsvlghwwlhrsfbqfrwytnkwnhmxanzkxrdmokrryivzisqoawlrxjwbefqebobzuwimhjzvvhvdflszeycghlcomzznqiiuycivawcjswunbfpglwduhlqojncmesuxrsagetqbprowktbgudfnspuotvswajvejxnfqiksyhcowqlxusghwwjsbbtjbxkbonizzvqeqktdcgmtfrlklzdqpncdabambezwubibisbhntdblndamupdwbtjqhskpovgjbuchekarzgheaztzrjnkdpgpytvcojfuirnchlncepvjhspgljcoqbmcwlkxhqhgoiwlgwnfgfhxmvvjvejumongtcwiecojswygydcbiqvikoqhddbulgjbniqklffjpqhelocbuydopzyrsbrpqcrokismwlsmepktlfhclljbyaceixvapknlhmifuiltkynejhiujnwrnevnzecpkjwwfnrounlwlvgzfpjpvzhebbnlzvimwsljjvxunpsvxkkwlchraqmuvvbajgeyhqovloyfqjvwowbloxksokreizafyblpossgzfzzsnfwipuecjgblofaxmajajkeufcbrrgpmqgobiibnweopygdizhzufrepgmmsnhvcwsqpqfpjxlgwbfoaqqgoepgwhgwlmfazpnptpamjtqomskfvflcreyscrpirzlbzmpcnbhsvrasjfmnbpgtgunishopjgcvcoglmebuwpkavujlffqyhfdgxmbaisrkutdxlzajgrzketisdagzophsknfqnicooxvtbtnkcrewkdspzienyfljyoesguyqpgcmhbenhqnxyxduzhhebydycrpwuagsbzzonoxcvnzalyhatjreljmgjleqwzizamsbtwcskbqrccgetzttmwgatczgjqquaprrqbfdsajtczweojevnbstrqvprtjzgyujsrghjccvjqazdrqwysevgmyjvvwrogvfdsprjcnoisjincfjnpcoyoicurufhjfhkghioigggxirtirhtsnqvmepqboozhuxnaisgpmcwmehflcejwoxdhbjxhfmrfnparazgzqctixabvtoepvhdgeezkuwqrzuyhvnwomegxhzzerafqbejbptlxdjpgahxlldidddzmawstgwmyartxtngpasrsnyfhaojrgtwepozvsjhnywgsoglbiwzaqzoprehekxmqmjzcgiqiaztjpocjkrgdhbbpptnekaggdxnmhbmcpszhkgjohqsfytyjprpqhhqtszdjdiheqleqgxtjycusqznxqyiusrehjwgqabztmvfrsbqcsktfyjuundpqtxdoywokwmsojkftduryuhgzstmjkmvmcmbybuyabmsznqwezqjyhjknqvbvbuxstatsoepjfemphoxiksmofxmydrmwyjpcaumdqtdkesjkvtnmxdifmbnqlmlkwrfuxjowgnrvftnfpjnsxyrbfqntrjrdkbekooxvkeixlpuzgavcrmqkargreoywntpadudggtdzjmosveyqjxtdfkhpavexylnwqsrqkfyuzpgnngglowabcaiijksmclrdasaxxrffzmwhabjsczfmcytfwhetoeqvvtqjtmfgrcokoxxigpqtxazqkpdncktedoobyrwgtdzrpuvivtqufhewmrhgglgsmutpkleukdcaahjbugogkhqfdwmylmijvbefguflfmgjjznvwkhtetxhpvszuoockhmianshyaraaicwhcudnmkznhhoqysysvqqpucxbtrwivmeekngfmxyjcqhjfllxaiqbiawesknkkrmjecjftltqsikggzeqkdxjrnpxpnoyvdjjswabfmunxoiurxmmreztengqxwinhzcwonncpzznqsvpwoootqpowipliafwknfdezllbgrwsrkshoujythslqlsgszyqrawesevoaarlarnbcepjkihqfleopxwoounqvplqzixcobldxdejmpntnwhldfalojabcpxdvntfixahivjbyhalwawcovmkgyvngpuhpisdduixvufpavxxqkmhjvpdfwlyfbsjqzsvquesjyxiupvbvudrlphkwsneijrtomqlwsugkpdrgqevdswjsdznllwvpbihstpsxozoffdgzbxjtubfzhtxmxqoklkwmggccluyxxopqppsasnrogalgdzlgwggqlahovrguevlxqxbuwqxnqnvrybhdruwitvjjfyfecomzssrqlklowgggurxbzzvdopzbimxhgdetkeveqdcbbewsxyacwtsglpofywgmjcldcxacgrbvwwfrjrmnrgndxevadceyvunjpybtzytfxqfztfvevoccqnemseqimfexadilkfrzrnotbfegbigkvnytwaeqsalshofsipkdcrcmzutuxgwuqzmsibrzdpropwxezaudvphuufvtmhdjredqehnlikpucohlnmfyubkflcsfsgbyvvqjgxnzanfhheotcvpuleowyltkusbtkgwsdulqualexporswttnlyunbhztuxcadjuwwfgyrueexxlxpeqgdmefdjjsphtijthrftjdfnwwnfdjtfrhtjithpsjjdfemdgqepxlxxeeurygfwwujdacxutzhbnuylnttwsropxelauqludswgktbsuktlywoelupvctoehhfnaznxgjqvvybgsfsclfkbuyfmnlhocupkilnheqderjdhmtvfuuhpvduazexwporpdzrbismzquwgxutuzmcrcdkpisfohslasqeawtynvkgibgefbtonrzrfklidaxefmiqesmenqccovevftzfqxftyztbypjnuvyecdavexdngrnmrjrfwwvbrgcaxcdlcjmgwyfoplgstwcayxswebbcdqevektedghxmibzpodvzzbxrugggwolklqrsszmocefyfjjvtiwurdhbyrvnqnxqwubxqxlveugrvohalqggwglzdglagornsasppqpoxxyulccggmwklkoqxmxthzfbutjxbzgdffozoxsptshibpvwllnzdsjwsdveqgrdpkguswlqmotrjienswkhplrduvbvpuixyjseuqvszqjsbfylwfdpvjhmkqxxvapfuvxiuddsiphupgnvygkmvocwawlahybjvihaxiftnvdxpcbajolafdlhwntnpmjedxdlbocxizqlpvqnuoowxpoelfqhikjpecbnralraaovesewarqyzsgslqlshtyjuohskrswrgbllzedfnkwfailpiwopqtooowpvsqnzzpcnnowczhniwxqgnetzermmxruioxnumfbawsjjdvyonpxpnrjxdkqezggkisqtltfjcejmrkknksewaibqiaxllfjhqcjyxmfgnkeemviwrtbxcupqqvsysyqohhnzkmnduchwciaarayhsnaimhkcoouzsvphxtethkwvnzjjgmflfugfebvjimlymwdfqhkgogubjhaacdkuelkptumsglgghrmwehfuqtvivuprzdtgwryboodetkcndpkqzaxtqpgixxokocrgfmtjqtvvqeotehwftycmfzcsjbahwmzffrxxasadrlcmskjiiacbawolggnngpzuyfkqrsqwnlyxevaphkfdtxjqyevsomjzdtggdudaptnwyoergrakqmrcvagzuplxiekvxookebkdrjrtnqfbryxsnjpfntfvrngwojxufrwklmlqnbmfidxmntvkjsekdtqdmuacpjywmrdymxfomskixohpmefjpeostatsxubvbvqnkjhyjqzewqnzsmbayubybmcmvmkjmtszghuyrudtfkjosmwkowyodxtqpdnuujyftkscqbsrfvmtzbaqgwjhersuiyqxnzqsucyjtxgqelqehidjdzstqhhqprpjytyfsqhojgkhzspcmbhmnxdggakentppbbhdgrkjcopjtzaiqigczjmqmxkeherpozqazwiblgosgwynhjsvzopewtgrjoahfynsrsapgntxtraymwgtswamzdddidllxhagpjdxltpbjebqfarezzhxgemownvhyuzrqwukzeegdhvpeotvbaxitcqzgzarapnfrmfhxjbhdxowjeclfhemwcmpgsianxuhzoobqpemvqnsthritrixgggioihgkhfjhfurucioyocpnjfcnijsioncjrpsdfvgorwvvjymgvesywqrdzaqjvccjhgrsjuygzjtrpvqrtsbnvejoewzctjasdfbqrrpauqqjgzctagwmttztegccrqbkscwtbsmazizwqeljgmjlerjtahylaznvcxonozzbsgauwprcydybehhzudxyxnqhnebhmcgpqyugseoyjlfyneizpsdkwerckntbtvxoocinqfnkshpozgadsitekzrgjazlxdtukrsiabmxgdfhyqffljuvakpwubemlgocvcgjpohsinugtgpbnmfjsarvshbncpmzblzriprcsyerclfvfksmoqtjmaptpnpzafmlwghwgpeogqqaofbwglxjpfqpqswcvhnsmmgperfuzhzidgypoewnbiibogqmpgrrbcfuekjajamxafolbgjceupiwfnszzfzgssoplbyfazierkoskxolbwowvjqfyolvoqhyegjabvvumqarhclwkkxvspnuxvjjlswmivzlnbbehzvpjpfzgvlwlnuornfwwjkpceznvenrwnjuihjenyktliufimhlnkpavxiecaybjllchfltkpemslwmsikorcqprbsryzpodyubcolehqpjfflkqinbjglubddhqokivqibcdygywsjoceiwctgnomujevjvvmxhfgfnwglwioghqhxklwcmbqocjlgpshjvpecnlhcnriufjocvtypgpdknjrztzaehgzrakehcubjgvopkshqjtbwdpumadnlbdtnhbsibibuwzebmabadcnpqdzlklrftmgcdtkqeqvzzinobkxbjtbbsjwwhgsuxlqwochyskiqfnxjevjawsvtoupsnfdugbtkworpbqtegasrxusemcnjoqlhudwlgpfbnuwsjcwavicyuiiqnzzmoclhgcyezslfdvhvvzjhmiwuzbobeqfebwjxrlwaoqsizviyrrkomdrxkznaxmhnwkntywrfqbfsrhlwwhglvsjlyvsedzpdkehjzztaszroobhbfmkygzsfhutpuuultywcanqtgrlxyqtdpulyjwqfqtkhhmpxlrejnbjnpshwqouzcyvputiuhbaiquuznwtixlhvusmqpfwttiroobuaukiptpwiqhvpfgxrbzqtqdtwscxafyhqxrurbsbeeolxummmbnbiceyyiylokiknobqjxbcvompxfdrzanbvaxfzrtstrnjlghhxdodagcokxyzjnrettaponkskxgvfnhzoztytxljiypjgkmgxqthjkhaykxlirvftoetulypilpzvvqbvxworcqgwbaepqvknnzdibliiskrwsoepowwlrgxmyvcpizqlgvrerzshwesrgwhpdwotzbnrzpjxjqxwikjdubvncubjtqagfwmznpnragebkxrrnabawovwcznqhjaqmxcnhmvcchkppmwnkyjyqlthkyojriirynrlubwebanbifuyrqalrxhysuivzwmfvtmgflasubktvxwrihwzmjobsuzwokrflxlsqjjdsknvmokksacttypikcserlmkkzsuxekacetydefadtgvijwaurshslpfdkhcsjlddcszwlxgnidlxrauwssuqgmeiiyjvmcrcujdhzhiwagxgksaynhbaqffpxhxdlkjrggzvogroxsabwbfgiyoqbrkifkorvhcqjyqiohxslulnfqawpvwxgxknvofasaoogurjzdrbhkquqittucsvmaorxhtxtvonspgbdkpwxixhbmsmoorahyzdsautmypshbkazuwnemtjddtosdrjpnsvsdeyhoagvvyuqpahrvdptentbpmxlhdhctigdecpgtumectyjyboxafaqwltjgsmbgmzdirvnbflhrppzptahlxgmwnfsnvomzxusrpkqsekfqnukvojbofbmbpcwgqnduayhiixoaeettblnjdbmnajccethcyrttgpbytmuccmbjsqmmarscnzcnedgkfsiwmuqgzsbdgbcoqnhuqmovluqhmvpsvcyebnaatqgaqimszzezmoqhbvwsjwqimbqywintklyosadwjcfbxgwifgzjuuslcctpygjypptuqkvhnsnobakioakvmyssuadroukepoyjqzasndfmnkwpuoyiifyqpzhumsphmvtoaajlonkfcyydifagluorgedyntwgtmgeqymsgpffyyhrsaacynkvqbetfqzpfuzeukjwxluhjydbyqahdyrghimpambvsqhepoihbvbbhaqhhyoiyaiifnowmhwkikktyiqyjmnlgtmyqunanovfbjzklhtmejehmldjhozbmrmbeubtzrhgcighlcdrhbcgunvmsbhxlqbrwqcikovaejpofowoyouuijwvjzxcnkgpgwynnqtsuogvnejvcmmhqpgzcgfpsixgwzdjtdztdakyvgeptgecgawrdjkfterhxnyvelhthbyerxdbaubuzfdyjhcxnnvuzothvuyftqaarpnraptlvfolkaclgthaghciqtyegolkbcixatydijkzwisbtrmnpihkigujnikjipudfubnlwbbehtgcqdqcuuoxwkkosrgdvjigadgnoaepmolwwztvfohagpvmaljvqxunilpmloikrpwmjsfrofeohjehnymrxhvudwhiayyrzztcsjbqeixspqextejdkkbapvbtoqflhrzqqodqngwishjragtwvpxwsuxivnjhnuxfjsmttsswhcepilqgvpxgahymkktwoziwtfjsdjwnkzlerwrtktqaisybmtyqthpkjspzsiqxwtsmcrevljbyfjtlqjcffracqcoiudpulwgvftzpeqwwjiqzcgnbjlyofzkwmmdyrubbgrzmjuhvxhijksnqcarkklpnrzkvqvssydbmmlkqhxfvmbvjxktqebensechmswfjifymekwfvhcggqtrrdpyxukbczzyvlpfqezoyyyhntqwkqvumhmqfougmqybdtlzououkgrwtyoejvqpfojidgnrcdzyivuwmowewvnuwgolyxnsiotcixtwewjeanwlxkypirlzixjqcwcigeitfmqrnseistkeuuzjjtooocltwkpatkzwquwxsytnutoeyxupokmtcqssvtkceiievgfhnvyihlniwtxitfpgfwnpdvhhsdpspeawgjmpzjzdpgqnfwjtvvlykjprpjoxsxkoxwdqqtliidogivbddxecgqbvuumcdspsoenptgygmjabnxgxpxiwcinstvwjbqpwaavhdeotyzmzvtuycdhkkdwluuxnfbabgparvzopsayvzq"));
        System.out.println(validPalindrome("abca"));
        System.out.println(validPalindrome("abcwa"));
        System.out.println(checkPerfectNumber(28));
        System.out.println(checkPerfectNumber(30));
        System.out.println(judgeSquareSum(300));
        System.out.println(judgeSquareSum(400));
        System.out.println(judgeSquareSum(500));
        System.out.println(judgeSquareSum(600));

        String[] array5 = {"flower", "flow", "flight"};
        String[] array6 = {"aa", "bb", "cc"};
        System.out.println(longestCommonPrefix(array5));
        System.out.println(longestCommonPrefix(array6));
        System.out.println(lengthOfLastWord("Hello World"));
        System.out.println(lengthOfLastWord(""));
        System.out.println(reachNumber(1));
        System.out.println(reachNumber(10));
        System.out.println(strStr("hello", "ll"));
        System.out.println(strStr("aaaaa", "b"));

        int[] array7 = {0, 0, 0, 0};
        int[] array8 = {3, 2, 1};

        System.out.println(canPlaceFlowers(array7, 3));
        System.out.println(canPlaceFlowers(array7, 2));
        System.out.println(mySqrt(8));
        System.out.println(mySqrt(4));
        System.out.println(findNthDigit(4));
        System.out.println(findNthDigit(11));
        System.out.println(findNthDigit(100));
        System.out.println(isPalindrome("race a car"));
        System.out.println(isPalindrome("0P"));
        System.out.println(thirdMax(array3));
        System.out.println(thirdMax(array8));
        System.out.println(convertToTitle(52));
        System.out.println(convertToTitle(701));
        int[] array9 = {1, 2, 3};
        rotate(array9, 4);
        int[] array10 = {1, 2, 3, 4, 5, 6};
        rotate(array10, 11);
        System.out.println(countPrimes(10));
        System.out.println(countPrimes(123));
        System.out.println(buddyStrings("ab", "ab"));
        System.out.println(buddyStrings("aa", "aa"));
        System.out.println(buddyStrings("aaaabc", "aaaacb"));
        System.out.println(reverse(123));
        System.out.println(reverse(-120));
        int[] array11 = {2, 3, 3, 2, 4};
        int[] array12 = {4, 2, 3};
        int[] array13 = {1, 4, 2, 3};
        System.out.println(checkPossibility(array8));
        System.out.println(checkPossibility(array3));
        System.out.println(checkPossibility(array11));
        System.out.println(checkPossibility(array12));
        System.out.println(checkPossibility(array13));

        int[][] array14 = {{7, 0}, {4, 4}, {7, 1}, {5, 0}, {6, 1}, {5, 2}};
        System.out.println(Arrays.deepToString(reconstructQueue(array14)));
    }

    private static boolean checkPossibility(int[] nums) {
        int arrayLength = nums.length;
        int[] copy = nums.clone();

        if (arrayLength < 3 || isArraySorted(nums)) {
            return true;
        } else {
            nums = copy.clone();
        }

        boolean nonDecreasing = false;
        int countTry = 0;

        if (nums[0] > nums[1]) {
            nums[0] = nums[1];
            if (isArraySorted(nums)) {
                return true;
            } else {
                nums = copy.clone();
            }
        }

        for (int i = 1; i < arrayLength - 1; i++) {
            if (nums[i] > nums[i + 1]) {
                countTry++;
                nums[i + 1] = nums[i];

                if (isArraySorted(nums)) {
                    return true;
                } else {
                    nums = copy.clone();
                }

                nums[i] = nums[i + 1];

                if (isArraySorted(nums)) {
                    return true;
                } else {
                    nums = copy.clone();
                }
            }
            if (countTry == 1) {
                return false;
            }
        }

        if (nums[arrayLength - 1] < nums[arrayLength - 2]) {
            nums[arrayLength - 1] = nums[arrayLength - 2];
            if (isArraySorted(nums)) {
                nonDecreasing = true;
            }
        }

        return nonDecreasing;
    }

    private static boolean isArraySorted(int[] array) {
        int[] copy = array.clone();
        Arrays.sort(copy);

        return Arrays.equals(array, copy);
    }

    private static int reverse(int x) {
        if (x > -10 && x < 10) {
            return x;
        }
        String minus = x < 0 ? "-" : "";
        String value = String.valueOf(x).replace("-", "");

        while (value.endsWith("0")) {
            value = value.substring(0, value.length() - 1);
        }

        StringBuilder sb = new StringBuilder(value);
        String reverse = String.valueOf(sb.reverse());
        String retValue = minus + reverse;

        long a = Long.parseLong(retValue);

        if (a > Integer.MAX_VALUE || a < Integer.MIN_VALUE) {
            return 0;
        }

        return Integer.parseInt(retValue);
    }

    private static boolean buddyStrings(String A, String B) {
        if (A.length() != B.length() || A.length() < 2) {
            return false;
        }

        char[] firstArray = A.toCharArray();
        char[] secondArray = B.toCharArray();

        boolean isSwappable = false;

        outerloop:
        for (int i = secondArray.length - 1; i >= 0; i--) {
            for (int j = secondArray.length - 1; j >= 0; j--) {
                if (j != i) {
                    char temp = secondArray[j];
                    secondArray[j] = secondArray[i];
                    secondArray[i] = temp;

                    if (Arrays.equals(firstArray, secondArray)) {
                        isSwappable = true;
                        break outerloop;
                    } else {
                        secondArray[i] = secondArray[j];
                        secondArray[j] = temp;
                    }
                }
            }
        }

        return isSwappable;
    }

    private static int countPrimes(int n) {
        int count = 0;

        for (int i = 2; i < n; i++) {
            if (isNumberPrime(i)) {
                count++;
            }
        }

        return count;
    }

    private static boolean isNumberPrime(int number) {
        boolean isPrime = true;

        if (number == 2 || number == 3) {
            return true;
        }

        for (int i = 2; i * i <= number; i++) {
            if (number % i == 0) {
                isPrime = false;
            }
        }

        return isPrime;
    }

    private static void rotate(int[] nums, int k) {
        int[] copy = nums.clone();

        for (int i = 0; i < copy.length; i++) {
            if (i - k >= 0) {
                nums[i] = copy[i - k];
            } else {
                int delta = copy.length - k + i;
                if (delta >= 0) {
                    nums[i] = copy[delta];
                } else if (nums.length != 1) {
                    nums[i] = copy[nums.length - (k % nums.length) + i];
                }
            }
        }
    }

    private static String convertToTitle(int n) {
        StringBuilder sb = new StringBuilder();
        int basicIndex = 64;
        int rest = n % 26 == 0 ? 26 : n % 26;
        sb.append((char) (basicIndex + rest));
        n = n - rest;

        while (n >= 26) {
            n = n / 26;
            rest = n % 26 == 0 ? 26 : n % 26;
            sb.append((char) (basicIndex + rest));
            n = n - rest;
        }

        return String.valueOf(sb.reverse());
    }

    private static int thirdMax(int[] nums) {
        int[] copy = nums.clone();
        Arrays.sort(copy);
        List<Integer> list = new ArrayList<>();
        list.add(copy[0]);

        for (int i = 1; i < copy.length; i++) {
            if (copy[i] != copy[i - 1]) {
                list.add(copy[i]);
            }
        }

        if (list.size() < 3) {
            return list.get(list.size() - 1);
        }

        return list.get(list.size() - 3);
    }

    private static boolean isPalindrome(String s) {
        char[] input = s.toLowerCase().trim().toCharArray();
        StringBuilder sb = new StringBuilder();

        for (Character ch : input) {
            if (Character.isLetterOrDigit(ch)) {
                sb.append(ch);
            }
        }

        char[] word = sb.toString().toCharArray();

        int i1 = 0;
        int i2 = word.length - 1;
        boolean value;

        value = forPolindromTask(word, i1, i2);

        return value;
    }

    private static int findNthDigit(int n) {
        int digits = 1;
        long count = 9;
        int pow = 1;

        while (n > digits * count) {
            n = (int) (n - (digits * count));
            digits++;
            count = count * 10;
            pow = pow * 10;
        }

        pow = pow + (n - 1) / digits;

        String s = Integer.toString(pow);
        char a = s.charAt((n - 1) % digits);

        return a - '0';
    }

    private static int mySqrt(int x) {
        return (int) Math.floor(Math.sqrt(x));
    }

    private static boolean canPlaceFlowers(int[] flowerbed, int n) {
        int size = flowerbed.length;

        if (size == 0 || (size == 1 && flowerbed[0] == 1 && n != 0)) {
            return false;
        } else if ((size == 1 && flowerbed[0] == 0) || (size == 1 && flowerbed[0] == 1)) {
            return true;
        }

        if (flowerbed[0] == 0 && flowerbed[1] == 0) {
            n--;
            flowerbed[0] = 1;
        }

        if (size > 2 && flowerbed[size - 1] == 0 && flowerbed[size - 2] == 0) {
            n--;
            flowerbed[size - 1] = 1;
        }

        for (int i = 1; i < flowerbed.length - 1; i++) {
            if (flowerbed[i - 1] == 0 && flowerbed[i] == 0 && flowerbed[i + 1] == 0) {
                n--;
                i++;
            }

            if (n <= 0) {
                return true;
            }
        }

        return n <= 0;
    }

    private static int strStr(String haystack, String needle) {
        return haystack.indexOf(needle);
    }

    private static int reachNumber(int target) {
        target = Math.abs(target);
        int sum = 0;
        int i;

        for (i = 1; sum <= target; i++) {
            sum += i;
            if (sum == target) {
                return i;
            }
        }
        i--;

        int z = 1;
        if (i % 2 != 0) {
            z = 2;
        }

        for (int j = sum; j > sum - i; j--) {
            if (j == target) {
                int targetPosition = sum - target + 1;

                if (targetPosition % 2 == 0) {
                    return i + z;
                } else {
                    return i;
                }
            }
        }

        return i;
    }

    private static int lengthOfLastWord(String s) {
        if (s == null || s.length() == 0) {
            return 0;
        }
        s = s.trim();

        String[] words = s.split(" ");
        return words[words.length - 1].length();
    }

    private static String longestCommonPrefix(String[] strs) {
        if (strs.length == 1) {
            return strs[0];
        }

        String commonPrefix = "";
        for (int i = 1; i < strs.length; i++) {
            String word = strs[i];
            StringBuilder tempCommonPrefix = new StringBuilder();
            boolean noMatch = true;

            for (Character ch : word.toCharArray()) {
                if (strs[i - 1].contains(String.valueOf(ch))) {
                    tempCommonPrefix.append(ch);
                    noMatch = false;
                }

                if (commonPrefix.length() < tempCommonPrefix.length() || commonPrefix.contains(tempCommonPrefix)) {
                    commonPrefix = String.valueOf(tempCommonPrefix);
                }
            }

            if (noMatch) {
                return "";
            }
        }

        return commonPrefix;
    }


    private static List<Integer> findAnagrams(String s, String p) {
        List<Integer> output = new ArrayList<>();
        int[] count1 = new int[10500];
        Arrays.fill(count1, 0);
        int[] count2 = new int[10500];
        int i;
        char[] arrayP = p.toCharArray();
        char[] arrayS;
        int sizeS = s.length();
        int sizeP = p.length();
        boolean isAnagram;

        for (char anArrayP : arrayP) {
            count1[anArrayP]++;
        }

        for (i = 0; i <= sizeS - sizeP; i++) {
            isAnagram = true;
            Arrays.fill(count2, 0);

            arrayS = s.substring(i, i + sizeP).toCharArray();
            for (char array : arrayS) {
                count2[array]++;
            }

            for (int j = 0; j < 10500; j++) {
                if (count1[j] != count2[j]) {
                    isAnagram = false;
                    break;
                }
            }

            if (isAnagram) output.add(i);
        }

        return output;
    }

    private static boolean checkArrayIsomorphic(String s, String t) {
        char[] array1 = s.toCharArray();
        char[] array2 = t.toCharArray();
        Map<String, String> map = new HashMap<>();
        String value1;
        String value2;

        for (int i = 0; i < array1.length; i++) {
            value1 = String.valueOf(array1[i]);
            value2 = String.valueOf(array2[i]);
            if (map.containsKey(value1)) {
                if (!map.get(value1).equals(value2)) {
                    return false;
                }
            }
            map.put(value1, value2);
        }

        return true;
    }

    private static boolean isIsomorphic(String s, String t) {
        return checkArrayIsomorphic(s, t) && checkArrayIsomorphic(t, s);
    }

    private static String addBinary(String a, String b) {
        char[] array1 = a.toCharArray();
        char[] array2 = b.toCharArray();
        int value = 0;
        StringBuilder finalString = new StringBuilder();

        char[] arrayBigger = array1.length >= array2.length ? array1 : array2;
        char[] arraySmaller = array2.length <= array1.length ? array2 : array1;

        for (int i = arrayBigger.length - 1; i >= 0; i--) {
            value += Character.getNumericValue(arrayBigger[i]);
            if (arrayBigger.length <= arraySmaller.length + i) {
                value += Character.getNumericValue(arraySmaller[i - (arrayBigger.length - arraySmaller.length)]);
            }

            if (value < 2) {
                finalString.append(value);
                value = 0;
            } else if (value == 2) {
                finalString.append(0);
                value = 1;
                if (i == 0) {
                    finalString.append(1);
                }
            } else {
                finalString.append(1);
                value = 1;
                if (i == 0) {
                    finalString.append(1);
                }
            }
        }

        return String.valueOf(finalString.reverse());
    }


    private static int countSegments(String s) {
        s = s.trim();
        if (s.equals("")) return 0;
        while (s.contains("  ")) {
            s = s.replace("  ", " ");
        }

        return s.split(" ").length;
    }

    private static int removeDuplicates(int[] nums) {
        int retValue = 1;
        int index = 1;
        for (int i = 1; i < nums.length; i++) {
            if (nums[i] != nums[i - 1]) {
                retValue++;
                nums[index++] = nums[i];
            }
        }
        return retValue;
    }

    private static double findMaxAverage(int[] nums, int k) {
        double result = Integer.MIN_VALUE;
        int sum;

        for (int i = 0; i <= nums.length - k; i++) {
            sum = 0;
            for (int j = i; j < i + k; j++) {
                sum += nums[j];
            }
            result = Math.max(sum, result);
        }

        return result / k;
    }

    private static boolean wordPattern(String pattern, String str) {
        if (str.split(" ").length != pattern.length()) {
            return false;
        }

        String[] arrayStr = str.split(" ");
        Map<String, String> map = new HashMap<>();
        map.put(String.valueOf(pattern.toCharArray()[0]), arrayStr[0]);

        for (int i = 1; i < pattern.toCharArray().length; i++) {
            String letter = String.valueOf(pattern.toCharArray()[i]);

            if ((map.containsKey(letter) && !map.get(letter).equals(arrayStr[i]))
                    | (map.containsValue(arrayStr[i]) && !letter.equals(getKeyByValue(map, arrayStr[i])))) {
                return false;
            } else {
                map.put(letter, arrayStr[i]);
            }
        }
        return true;
    }

    private static String getKeyByValue(Map map, String value) {
        String returnedValue = "";
        for (Object key : map.keySet()) {
            if (map.get(key).equals(value)) {
                returnedValue = String.valueOf(key);
            }
        }

        return returnedValue;
    }

    private static void merge(int[] nums1, int m, int[] nums2, int n) {
        int[] array1 = Arrays.copyOfRange(nums1, 0, m);
        int[] array2 = Arrays.copyOfRange(nums2, 0, n);

        System.arraycopy(array1, 0, nums1, 0, array1.length);
        System.arraycopy(array2, 0, nums1, array1.length, array2.length + array1.length - array1.length);

        Arrays.sort(nums1);
    }

    private static boolean validPalindrome(String s) {
        char[] word = s.toCharArray();

        for (int i = 0; i < s.length(); i++) {
            char[] woChar = new char[word.length - 1];

            System.arraycopy(word, 0, woChar, 0, i);
            System.arraycopy(word, i + 1, woChar, i, word.length - (i + 1));

            int i1 = 0;
            int i2 = woChar.length - 1;
            boolean value;

            value = forPolindromTask(woChar, i1, i2);
            if (value) {
                return true;
            }
        }

        return false;
    }

    private static boolean forPolindromTask(char[] woChar, int i1, int i2) {
        boolean value = true;
        while (i2 > i1) {
            if (woChar[i1] != woChar[i2]) {
                value = false;
                break;
            }

            ++i1;
            --i2;
        }
        return value;
    }

    private static boolean checkPerfectNumber(int num) {
        if (num % 2 != 0 || num == 0) {
            return false;
        }
        int sum = 0;

        for (int i = 1; i <= num / 2; i++) {
            if (num % i == 0) {
                sum += i;
            }
        }

        return sum == num;
    }

    private static boolean judgeSquareSum(int c) {
        for (long a = 0; a * a <= c; a++) {
            if (Math.sqrt(c - a * a) % 1 == 0) {
                return true;
            }
        }
        return false;
    }

    private static int[][] reconstructQueue(int[][] people) {
        Arrays.sort(people, (o1, o2) -> o1[0] == o2[0] ? o1[1] - o2[1] : o2[0] - o1[0]);
        List<int[]> res = new ArrayList<>();
        for (int[] curr : people)
            res.add(curr[1], curr);
        return res.toArray(new int[people.length][]);
    }

}
